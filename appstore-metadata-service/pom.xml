<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.lgi.appstore.metadata</groupId>
        <artifactId>appstore-metadata-service-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>appstore-metadata-service</artifactId>

    <properties>
        <db.user>postgres</db.user>
        <db.password>postgres</db.password>
        <db.name>postgres</db.name>
        <db.host>localhost</db.host>
        <db.port>46576</db.port>
        <ryuk.port>46577</ryuk.port>
        <db.schema>appstore_metadata_service</db.schema>
        <db.url>jdbc:postgresql://${db.host}:${db.port}/${db.name}</db.url>
        <db.driver>org.postgresql.Driver</db.driver>
        <start-class>com.lgi.appstore.metadata.Application</start-class>
        <generated.source.package>com.lgi.appstore.metadata</generated.source.package>
        <maven.jib.plugin.version>2.2.0</maven.jib.plugin.version>
        <scmBranch>current</scmBranch>
        <scmCommit>latest</scmCommit>
        <sock-dir-docker-host>/var/run/docker.sock</sock-dir-docker-host>
    </properties>

    <profiles>
        <profile>
            <id>windows-specific-settings</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <sock-dir-docker-host>//var/run/docker.sock</sock-dir-docker-host>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi-ui-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.11.1</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer.version}</version>
        </dependency>

        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash.logback.encoder.version}</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jars</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>jars/</classpathPrefix>
                            <mainClass>com.lgi.appstore.metadata.Application</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>.</Class-Path>
                        </manifestEntries>
                    </archive>

                    <finalName>${project.artifactId}</finalName>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.34.0</version>
                <configuration>
                    <logStdout>true</logStdout>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <alias>ryuk-summoned</alias>
                            <name>testcontainers/ryuk:0.3.0</name>
                            <run>
                                <ports>
                                    <port>ryuk.port:8080</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${sock-dir-docker-host}:/var/run/docker.sock</volume>
                                    </bind>
                                </volumes>
                                <autoRemove>true</autoRemove>
                            </run>
                        </image>
                        <image>
                            <alias>postgres</alias>
                            <name>postgres:11</name>
                            <run>
                                <env>
                                    <POSTGRES_PASSWORD>${db.password}</POSTGRES_PASSWORD>
                                </env>
                                <ports>
                                    <port>db.port:5432</port>
                                </ports>
                                <wait>
                                    <time>5000</time>
                                </wait>
                                <autoRemove>true</autoRemove>
                                <labels>
                                    <killme>true</killme>
                                </labels>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start-postgres</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.libertyglobal.common.maven</groupId>
                <artifactId>tcp-msg-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>write-death-note-for-postgres</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tcpmsg</goal>
                        </goals>
                        <configuration>
                            <port>${ryuk.port}</port>
                            <msg>label=killme</msg>
                            <repeatAmount>2</repeatAmount>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${maven.jib.plugin.version}</version>
                <executions>
                    <execution>
                        <id>docker-build-and-push</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <from>
                        <image>openjdk:13.0.2-jdk-slim</image>
                    </from>
                    <to>
                        <image>${registry.url}/${registry.namespace}/${project.artifactId}:${project.version}</image>
                    </to>
                    <container>
                        <entrypoint>
                            <shell>sh</shell>
                            <option>-c</option>
                            <arg>/run.sh</arg>
                        </entrypoint>
                        <ports>
                            <port>8080</port>
                            <port>8081</port>
                        </ports>
                        <environment>
                            <APP_NAME>${project.artifactId}</APP_NAME>
                            <APP_VERSION>${project.version}</APP_VERSION>
                            <APP_REVISION>${scmCommit}</APP_REVISION><!-- specified at build level -->
                            <APP_BRANCH>${scmBranch}</APP_BRANCH><!-- specified at build level -->
                            <APP_BUILD_TIME>${maven.build.timestamp}</APP_BUILD_TIME>
                        </environment>
                        <filesModificationTime>${maven.build.timestamp}</filesModificationTime>
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                    </container>
                    <extraDirectories>
                        <permissions>
                            <permission>
                                <file>/run.sh</file>
                                <mode>777</mode>
                            </permission>
                        </permissions>
                    </extraDirectories>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>6.3.1</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>${db.url}</url>
                    <user>${db.user}</user>
                    <password>${db.password}</password>
                    <schemas>
                        <schema>${db.schema}</schema>
                    </schemas>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgresql.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <executions>
                    <execution>
                        <id>generate-postgre</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <jdbc>
                                <driver>${db.driver}</driver>
                                <url>${db.url}</url>
                                <user>${db.user}</user>
                                <password>${db.password}</password>
                            </jdbc>
                            <generator>
                                <database>
                                    <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                    <includes>.*</includes>
                                    <inputSchema>${db.schema}</inputSchema>
                                </database>
                                <generate>
                                    <pojos>true</pojos>
                                    <pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
                                    <javaTimeTypes>true</javaTimeTypes>
                                    <fluentSetters>true</fluentSetters>
                                </generate>
                                <target>
                                    <packageName>com.lgi.appstore.metadata.jooq.model</packageName>
                                    <directory>target/generated-sources/jooq</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>./docker-compose/asms/target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>target</directory>
                                    <includes>
                                        <include>**/*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.10.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>5.0.0-beta3</version>
                <executions>
                    <execution>
                        <id>openapi-generate-spring</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/static/appstore-metadata-service.yaml
                            </inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>${generated.source.package}.model</modelPackage>
                            <generateApis>false</generateApis>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <configOptions>
                                <useBeanValidation>true</useBeanValidation>
                                <performBeanValidation>true</performBeanValidation>
                                <openApiNullable>false</openApiNullable>
                                <dateLibrary>java8</dateLibrary>
                                <booleanGetterPrefix>is</booleanGetterPrefix>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>